//=============================================================================
//
// メッシュシリンダークラス [MeshCylinder.h]
// Author : KEITA OHUCHI
//
//=============================================================================
#ifndef _MESH_CYLINDER_H_
#define _MESH_CYLINDER_H_

#include "Scene3D.h"


//-----------------------------------------------------------------------------
// クラス定義
//-----------------------------------------------------------------------------
class MeshCylinder : public Scene3D {
public:
	//=========================================================================
	// コンストラクタとデストラクタ
	//=========================================================================
	MeshCylinder(int priority = PRIORITY_MOUNTAIN);
	~MeshCylinder();

	//=========================================================================
	// 初期化処理
	//=========================================================================
	virtual HRESULT Init(D3DXVECTOR3 pos,
		int block_num_x, int block_num_y,
		float radius, float height);
	//=========================================================================
	// 更新処理
	//=========================================================================
	virtual void Update();
	//=========================================================================
	// 描画処理
	//=========================================================================
	virtual void Draw();

	//=========================================================================
	// 生成処理
	//=========================================================================
	static MeshCylinder *Create(D3DXVECTOR3 pos,
		int block_num_x, int block_num_y,
		float radius, float height);


protected:
	LPDIRECT3DINDEXBUFFER9	indexBuffer_;  // インデックスバッファ
	int						indexNum_;  // 頂点の総インデックス数
	int						vertexNum_;  // 総頂点数
	int						polygonNum_;  // 総ポリゴン数
	int						blockNumX_, blockNumY_;  // ブロック数
	float					radius_;  // 半径
	float					height_;  // 高さ
};


#endif


// End of file.