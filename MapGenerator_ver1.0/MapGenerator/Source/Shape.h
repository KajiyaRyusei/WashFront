//=============================================================================
//
// 衝突領域クラス [Shape.h]
// Author : KEITA OHUCHI
//
//=============================================================================
#ifndef _SHAPE_H_
#define _SHAPE_H_

#include "Main.h"


//-----------------------------------------------------------------------------
// 列挙型定義
//-----------------------------------------------------------------------------

// 形状の種類
enum SHAPE_TYPE {
	SHAPE_TYPE_BOX,			// Bounding Box
	SHAPE_TYPE_SPHERE,		// Bounding Sphere
	SHAPE_TYPE_MAX
};


//-----------------------------------------------------------------------------
// 前方宣言
//-----------------------------------------------------------------------------
class Scene;


//-----------------------------------------------------------------------------
// クラス定義
//-----------------------------------------------------------------------------
class Shape {
public:
	//=========================================================================
	// コンストラクタとデストラクタ
	//=========================================================================
	Shape() {};
	virtual ~Shape() {};

	//=========================================================================
	// 描画処理
	//=========================================================================
	virtual void Draw() = 0;

	//=========================================================================
	// 形状の取得処理
	//=========================================================================
	virtual SHAPE_TYPE GetType() = 0;
	//=========================================================================
	// 親のオブジェクトを設定
	//=========================================================================
	void SetParent(Scene *parent) {
		parent_ = parent;
	};
	//=========================================================================
	// 親のオブジェクトを取得
	//=========================================================================
	Scene *GetParent() {
		return parent_;
	};

private:
	Scene *parent_;
};


#endif


// End of file