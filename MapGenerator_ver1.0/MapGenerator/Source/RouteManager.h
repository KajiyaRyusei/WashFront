//=============================================================================
//
// ルートマネージャクラス [RouteManager.h]
// Author : KEITA OHUCHI
//
//=============================================================================
#ifndef _ROUTE_MANAGER_H_
#define _ROUTE_MANAGER_H_

#include "Main.h"



//-----------------------------------------------------------------------------
// STL使用宣言
//-----------------------------------------------------------------------------
using namespace std;
#include <vector>


//-----------------------------------------------------------------------------
// 構造体宣言
//-----------------------------------------------------------------------------
struct RoutePoint{
	D3DXVECTOR3	position;
	D3DXVECTOR3	rotation;
	D3DXVECTOR3	playerDirection;
	float		speed;
	int			state;
};


// どのルートを変更中か
enum ROUTE_MODE {
	ROUTE_MODE_1P_CAMERA = (0),
	ROUTE_MODE_2P_CAMERA,
	ROUTE_MODE_MAX
};

class SceneBillboard;
class Scene3D;


//-----------------------------------------------------------------------------
// クラス定義
//-----------------------------------------------------------------------------
class RouteManager {
public:
	//=========================================================================
	// コンストラクタとデストラクタ
	//=========================================================================
	RouteManager();
	virtual ~RouteManager();

	//=========================================================================
	// 初期化処理
	//=========================================================================
	HRESULT Init();
	//=========================================================================
	// 更新処理
	//=========================================================================
	void Update();
	//=========================================================================
	// 描画処理
	//=========================================================================
	void Draw();

	//=========================================================================
	// データの出力
	//=========================================================================
	void OutputData(FILE *outputFile);
	//=========================================================================
	// データの入力
	//=========================================================================
	void InputData(FILE *inputFile);


	//=========================================================================
	// 点の削除
	//=========================================================================
	void AllDeletePoint();
	//=========================================================================
	// 点の生成
	//=========================================================================
	void CreatePoint();
	void CreatePoint(D3DXVECTOR3 position);
	//=========================================================================
	// 点の挿入
	//=========================================================================
	void InsertPoint();
	void InsertPoint(D3DXVECTOR3 position);
	//=========================================================================
	// 点の削除
	//=========================================================================
	void DeletePoint();
	//=========================================================================
	// 点の選択
	//=========================================================================
	void SelectPoint(int combo);


	//=========================================================================
	// 座標の設定
	//=========================================================================
	void SetPositionX(float positionX);
	void SetPositionY(float positionY);
	void SetPositionZ(float positionZ);
	void SetRotationX(float rotationX);
	void SetRotationY(float rotationY);
	void SetRotationZ(float rotationZ);
	void SetPlayerDirectionX(float playerDirectionX);
	void SetPlayerDirectionY(float playerDirectionY);
	void SetPlayerDirectionZ(float playerDirectionZ);
	void SetSpeed(float speed);
	void SetState(int state);

	//=========================================================================
	// 選択中の点を設定
	//=========================================================================
	void SetPointListCursor(int cursor) { pointListCursor_[routeMode_] = cursor; }

	void SetRouteMode(int mode) { routeMode_ = mode; }
	int GetRouteMode() { return routeMode_; }

	//=========================================================================
	// 座標の取得
	//=========================================================================
	D3DXVECTOR3 GetPosition();
	D3DXVECTOR3 GetRotation();
	D3DXVECTOR3 GetPlayerDirection();
	float GetSpeed();
	int GetState();

	RoutePoint *GetRoutePoint(int index, int cursor);

private:

	std::vector <RoutePoint*>	pointList_[2];			// ポイントのリスト
	int							pointListCursor_[2];	// カーソル
	SceneBillboard				*point_;
	Scene3D						*cameraAllow_;
	Scene3D						*playerAllow_;
	int							routeMode_;
};


#endif


// End of file