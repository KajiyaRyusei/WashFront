//=============================================================================
//
// キーボード入力処理 [Keyboard.h]
// Author : KEITA OHUCHI
//
//=============================================================================
#ifndef _KEYBOARD_H_
#define _KEYBOARD_H_

#include <Windows.h>
#include "Input.h"


//-----------------------------------------------------------------------------
// マクロ定義
//-----------------------------------------------------------------------------
#define KEY_MAX (256)


//-----------------------------------------------------------------------------
// クラス定義
//-----------------------------------------------------------------------------
class Keyboard : public Input {
public:
	//=========================================================================
	// コンストラクタとデストラクタ
	//=========================================================================
	Keyboard();
	~Keyboard();

	//=========================================================================
	// 初期化処理
	//=========================================================================
	HRESULT Init(HINSTANCE instance, HWND wnd);
	//=========================================================================
	// 更新処理
	//=========================================================================
	void Update();

	//=========================================================================
	// 入力情報の取得
	//=========================================================================
	bool GetPressKey(int key);
	bool GetTriggerKey(int key);
	bool GetRepeatKey(int key);
	bool GetReleaseKey(int key);
	bool GetAnykey() { return anykeyFlag_; };


private:
	BYTE	pressKey_[KEY_MAX];  // プレスキー情報
	BYTE	triggerKey_[KEY_MAX];	  // トリガーキー情報
	BYTE	repeatKey_[KEY_MAX];  // リピートキー情報
	BYTE	releaseKey_[KEY_MAX];  // リリースキー情報
	int		keyCounter_[KEY_MAX];  // 押下時間のカウンタ
	bool	anykeyFlag_;
};


#endif


// End of file